{
  // Place your nextauth workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "next api auth": {
    "prefix": "napiauth",
    "body": [
      "import NextAuth from 'next-auth'",
      "import AppleProvider from 'next-auth/providers/apple'",
      "import FacebookProvider from 'next-auth/providers/facebook'",
      "import GoogleProvider from 'next-auth/providers/google'",
      "import EmailProvider from 'next-auth/providers/email'",
      "",
      "export default NextAuth({",
      "  providers: [",
      "    // OAuth authentication providers...",
      "    AppleProvider({",
      "      clientId: process.env.APPLE_ID,",
      "      clientSecret: process.env.APPLE_SECRET",
      "    }),",
      "    FacebookProvider({",
      "      clientId: process.env.FACEBOOK_ID,",
      "      clientSecret: process.env.FACEBOOK_SECRET",
      "    }),",
      "    GoogleProvider({",
      "      clientId: process.env.GOOGLE_ID,",
      "      clientSecret: process.env.GOOGLE_SECRET",
      "    }),",
      "    // Passwordless / email sign in",
      "    EmailProvider({",
      "      server: process.env.MAIL_SERVER,",
      "      from: 'NextAuth.js <no-reply@example.com>'",
      "    }),",
      "  ]",
      "})"
    ],
    "description": "next api auth"
  },
  "next client auth": {
    "prefix": "nclientauth",
    "body": [
      "import { useSession, signIn, signOut } from \"next-auth/react\"",
      "",
      "export default function Component() {",
      "  const { data: session } = useSession()",
      "  if(session) {",
      "    return <>",
      "      Signed in as {session.user.email} <br/>",
      "      <button onClick={() => signOut()}>Sign out</button>",
      "    </>",
      "  }",
      "  return <>",
      "    Not signed in <br/>",
      "    <button onClick={() => signIn()}>Sign in</button>",
      "  </>",
      "}"
    ],
    "description": "next client auth"
  },
  "next _app auth": {
    "prefix": "n_appauth",
    "body": [
      "import { SessionProvider } from \"next-auth/react\"",
      "",
      "export default function App({",
      "  Component, pageProps: { session, ...pageProps }",
      "}) {",
      "  return (",
      "    <SessionProvider session={session}>",
      "      <Component {...pageProps}/>",
      "    </SessionProvider>",
      "  )",
      "}"
    ],
    "description": "next _app auth"
  }
}
